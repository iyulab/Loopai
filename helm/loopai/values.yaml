# Default values for Loopai
replicaCount: 2

image:
  repository: loopai/cloudapi
  pullPolicy: IfNotPresent
  tag: "1.0.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/metrics"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  metricsPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: loopai.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: loopai-tls
  #    hosts:
  #      - loopai.local

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - loopai
        topologyKey: kubernetes.io/hostname

# Database configuration
database:
  host: loopai-sqlserver
  port: 1433
  name: LoopaiDb
  user: sa
  # Password should be provided via secret
  existingSecret: loopai-db-secret
  existingSecretKey: password

# Redis configuration
redis:
  enabled: true
  host: loopai-redis-master
  port: 6379
  # Password should be provided via secret
  existingSecret: loopai-redis-secret
  existingSecretKey: password

# OpenTelemetry configuration
opentelemetry:
  enabled: true
  otlpEndpoint: http://otel-collector:4317

# Rate limiting configuration
rateLimiting:
  enabled: true
  generalLimitPerMinute: 60
  generalLimitPerHour: 1000
  executeLimitPerMinute: 30
  executeLimitPerHour: 500

# Webhook configuration
webhooks:
  maxSubscriptions: 100
  maxRetries: 3
  timeoutSeconds: 30

# Health check configuration
healthCheck:
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3
  startupProbe:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 30

# Service Monitor for Prometheus Operator
serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  labels: {}

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Environment variables
env:
  - name: ASPNETCORE_ENVIRONMENT
    value: "Production"
  - name: DOTNET_RUNNING_IN_CONTAINER
    value: "true"

# Extra environment variables from secrets/configmaps
envFrom: []
#  - secretRef:
#      name: loopai-secrets
#  - configMapRef:
#      name: loopai-config

# Volume mounts for temporary files
volumeMounts:
  - name: tmp
    mountPath: /tmp
  - name: app-tmp
    mountPath: /app/tmp

volumes:
  - name: tmp
    emptyDir: {}
  - name: app-tmp
    emptyDir: {}
