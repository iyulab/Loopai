// <auto-generated />
using System;
using Loopai.CloudApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Loopai.CloudApi.Migrations
{
    [DbContext(typeof(LoopaiDbContext))]
    [Migration("20251026111033_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Loopai.Core.Models.ExecutionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasAnnotation("Relational:JsonPropertyName", "error_message");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "executed_at");

                    b.Property<string>("InputData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "input");

                    b.Property<double?>("LatencyMs")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)")
                        .HasAnnotation("Relational:JsonPropertyName", "latency_ms");

                    b.Property<double?>("MemoryUsageMb")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)")
                        .HasAnnotation("Relational:JsonPropertyName", "memory_usage_mb");

                    b.Property<string>("OutputData")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "output");

                    b.Property<Guid>("ProgramId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "program_id");

                    b.Property<bool>("SampledForValidation")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "sampled_for_validation");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "task_id");

                    b.Property<Guid?>("ValidationId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "validation_id");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId", "ExecutedAt");

                    b.HasIndex("TaskId", "ExecutedAt");

                    b.HasIndex("TaskId", "SampledForValidation", "ExecutedAt");

                    b.ToTable("ExecutionRecords", (string)null);
                });

            modelBuilder.Entity("Loopai.Core.Models.ProgramArtifact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ConfidenceScore")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "confidence_score");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<DateTime?>("DeployedAt")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "deployed_at");

                    b.Property<double>("DeploymentPercentage")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "deployment_percentage");

                    b.Property<double>("GenerationCost")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "generation_cost");

                    b.Property<double>("GenerationTimeSec")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "generation_time_sec");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LlmModel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:JsonPropertyName", "llm_model");

                    b.Property<string>("LlmProvider")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "llm_provider");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SynthesisStrategy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "synthesis_strategy");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "task_id");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskId", "Status");

                    b.HasIndex("TaskId", "Version")
                        .IsUnique();

                    b.ToTable("ProgramArtifacts", (string)null);
                });

            modelBuilder.Entity("Loopai.Core.Models.TaskSpecification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AccuracyTarget")
                        .HasPrecision(3, 2)
                        .HasColumnType("float(3)")
                        .HasAnnotation("Relational:JsonPropertyName", "accuracy_target");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Examples")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputSchema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "input_schema");

                    b.Property<int>("LatencyTargetMs")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "latency_target_ms");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OutputSchema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "output_schema");

                    b.Property<double>("SamplingRate")
                        .HasPrecision(3, 2)
                        .HasColumnType("float(3)")
                        .HasAnnotation("Relational:JsonPropertyName", "sampling_rate");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tasks", (string)null);
                });

            modelBuilder.Entity("Loopai.Core.Models.ProgramArtifact", b =>
                {
                    b.OwnsOne("Loopai.Core.Models.ComplexityMetrics", "ComplexityMetrics", b1 =>
                        {
                            b1.Property<Guid>("ProgramArtifactId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("CyclomaticComplexity")
                                .HasColumnType("int");

                            b1.Property<double?>("EstimatedLatencyMs")
                                .HasColumnType("float");

                            b1.Property<int?>("LinesOfCode")
                                .HasColumnType("int");

                            b1.HasKey("ProgramArtifactId");

                            b1.ToTable("ProgramArtifacts");

                            b1.HasAnnotation("Relational:JsonPropertyName", "complexity_metrics");

                            b1.WithOwner()
                                .HasForeignKey("ProgramArtifactId");
                        });

                    b.Navigation("ComplexityMetrics")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
